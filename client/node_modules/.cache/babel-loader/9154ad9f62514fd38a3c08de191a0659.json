{"ast":null,"code":"/*\n    This is our http api, which we use to send requests to\n    our back-end API. Note we're using the Axios library\n    for doing this, which is an easy to use AJAX-based\n    library. We could (and maybe should) use Fetch, which\n    is a native (to browsers) standard, but Axios is easier\n    to use when sending JSON back and forth and it's a Promise-\n    based API which helps a lot with asynchronous communication.\n    \n    @author McKilla Gorilla\n*/\n\nimport axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:4000/api'\n});\n\n// THESE ARE ALL THE REQUESTS WE'LL BE MAKING, ALL REQUESTS HAVE A\n// REQUEST METHOD (like get) AND PATH (like /playlist). SOME ALSO\n// REQUIRE AN id SO THAT THE SERVER KNOWS ON WHICH LIST TO DO ITS\n// WORK, AND SOME REQUIRE DATA, WHICH WE CALL THE payload, FOR WHEN\n// WE NEED TO PUT THINGS INTO THE DATABASE OR IF WE HAVE SOME\n// CUSTOM FILTERS FOR QUERIES\n//posting playlists to db\nexport const create_play_lists = payload => api.post(`/playlists`, payload);\nexport const getAllPlaylists = () => api.get(`/playlists`);\nexport const getPlaylistPairs = () => api.get('playlistpairs');\nexport const getPlaylistById = id => api.get(`/playlist/${id}`);\nconst apis = {\n  create_play_lists,\n  getAllPlaylists,\n  getPlaylistPairs,\n  getPlaylistById\n};\nexport default apis;","map":{"version":3,"names":["axios","api","create","baseURL","create_play_lists","payload","post","getAllPlaylists","get","getPlaylistPairs","getPlaylistById","id","apis"],"sources":["C:/Users/Sadashiva Yalla/Desktop/Playlister_HW3/Playlister_HW3-main/client/src/api/index.js"],"sourcesContent":["/*\n    This is our http api, which we use to send requests to\n    our back-end API. Note we're using the Axios library\n    for doing this, which is an easy to use AJAX-based\n    library. We could (and maybe should) use Fetch, which\n    is a native (to browsers) standard, but Axios is easier\n    to use when sending JSON back and forth and it's a Promise-\n    based API which helps a lot with asynchronous communication.\n    \n    @author McKilla Gorilla\n*/\n\nimport axios from 'axios'\nconst api = axios.create({\n    baseURL: 'http://localhost:4000/api',\n})\n\n// THESE ARE ALL THE REQUESTS WE'LL BE MAKING, ALL REQUESTS HAVE A\n// REQUEST METHOD (like get) AND PATH (like /playlist). SOME ALSO\n// REQUIRE AN id SO THAT THE SERVER KNOWS ON WHICH LIST TO DO ITS\n// WORK, AND SOME REQUIRE DATA, WHICH WE CALL THE payload, FOR WHEN\n// WE NEED TO PUT THINGS INTO THE DATABASE OR IF WE HAVE SOME\n// CUSTOM FILTERS FOR QUERIES\n//posting playlists to db\nexport const create_play_lists = (payload) => api.post(`/playlists`,payload)\nexport const getAllPlaylists = () => api.get(`/playlists`)\nexport const getPlaylistPairs = () => api.get('playlistpairs')\nexport const getPlaylistById = (id) => api.get(`/playlist/${id}`)\n\nconst apis = {\n    create_play_lists,\n    getAllPlaylists,\n    getPlaylistPairs,\n    getPlaylistById,\n}\n\nexport default apis\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACrBC,OAAO,EAAE;AACb,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,iBAAiB,GAAIC,OAAO,IAAKJ,GAAG,CAACK,IAAI,CAAE,YAAW,EAACD,OAAO,CAAC;AAC5E,OAAO,MAAME,eAAe,GAAG,MAAMN,GAAG,CAACO,GAAG,CAAE,YAAW,CAAC;AAC1D,OAAO,MAAMC,gBAAgB,GAAG,MAAMR,GAAG,CAACO,GAAG,CAAC,eAAe,CAAC;AAC9D,OAAO,MAAME,eAAe,GAAIC,EAAE,IAAKV,GAAG,CAACO,GAAG,CAAE,aAAYG,EAAG,EAAC,CAAC;AAEjE,MAAMC,IAAI,GAAG;EACTR,iBAAiB;EACjBG,eAAe;EACfE,gBAAgB;EAChBC;AACJ,CAAC;AAED,eAAeE,IAAI"},"metadata":{},"sourceType":"module"}